<?xml version="1.0" encoding="UTF-8"?>
<ivy-module version="2.0" xmlns:m="http://ant.apache.org/ivy/maven" xmlns:e="http://ant.apache.org/ivy/extra">
	<info organisation="org.glassfish.jaxb"
		module="codemodel"
		revision="2.3.2"
		status="release"
		publication="20181227141532"
	>
		<license name="Eclipse Public License v. 2.0" url="https://www.eclipse.org/org/documents/epl-2.0/EPL-2.0.txt" />
		<license name="GNU General Public License, version 2 with the GNU Classpath Exception" url="https://www.gnu.org/software/classpath/license.html" />
		<description homepage="">
		The core functionality of the CodeModel java source code generation library
		</description>
		<m:properties__upper.java.level>9</m:properties__upper.java.level>
		<m:properties__sonatypeOssDistMgmtReleasesUrl>https://oss.sonatype.org/service/local/staging/deploy/maven2/</m:properties__sonatypeOssDistMgmtReleasesUrl>
		<m:properties__findbugs.exclude>${project.basedir}/exclude-codemodel.xml</m:properties__findbugs.exclude>
		<e:sbtTransformHash>78f8550113afc9ede52db193dbe236e413c97bd4</e:sbtTransformHash>
		<m:properties__base.java.level>7</m:properties__base.java.level>
		<m:properties__project.build.sourceEncoding>UTF-8</m:properties__project.build.sourceEncoding>
		<m:properties__sonatypeOssDistMgmtSnapshotsUrl>https://oss.sonatype.org/content/repositories/snapshots/</m:properties__sonatypeOssDistMgmtSnapshotsUrl>
		<m:maven.plugins>org.apache.maven.plugins__maven-compiler-plugin__3.8.0|org.apache.maven.plugins__maven-enforcer-plugin__3.0.0-M2|org.codehaus.mojo__build-helper-maven-plugin__null|org.apache.maven.plugins__maven-compiler-plugin__3.8.0|org.apache.maven.plugins__maven-enforcer-plugin__3.0.0-M2|org.codehaus.mojo__build-helper-maven-plugin__null</m:maven.plugins>
	</info>
	<configurations>
		<conf name="default" visibility="public" description="runtime dependencies and master artifact can be used with this conf" extends="runtime,master"/>
		<conf name="master" visibility="public" description="contains only the artifact published by this module itself, with no transitive dependencies"/>
		<conf name="compile" visibility="public" description="this is the default scope, used if none is specified. Compile dependencies are available in all classpaths."/>
		<conf name="provided" visibility="public" description="this is much like compile, but indicates you expect the JDK or a container to provide it. It is only available on the compilation classpath, and is not transitive."/>
		<conf name="runtime" visibility="public" description="this scope indicates that the dependency is not required for compilation, but is for execution. It is in the runtime and test classpaths, but not the compile classpath." extends="compile"/>
		<conf name="test" visibility="private" description="this scope indicates that the dependency is not required for normal use of the application, and is only available for the test compilation and execution phases." extends="runtime"/>
		<conf name="system" visibility="public" description="this scope is similar to provided except that you have to provide the JAR which contains it explicitly. The artifact is always available and is not looked up in a repository."/>
		<conf name="sources" visibility="public" description="this configuration contains the source artifact of this module, if any."/>
		<conf name="javadoc" visibility="public" description="this configuration contains the javadoc artifact of this module, if any."/>
		<conf name="optional" visibility="public" description="contains all optional dependencies"/>
	</configurations>
	<publications>
		<artifact name="codemodel" type="jar" ext="jar" conf="master"/>
	</publications>
	<dependencies>
		<dependency org="junit" name="junit" rev="4.12" force="true" conf="test->runtime(*),master(compile)"/>
		<dependency org="com.google.code.javaparser" name="javaparser" rev="1.0.11" force="true" conf="test->runtime(*),master(compile)"/>
	</dependencies>
</ivy-module>
