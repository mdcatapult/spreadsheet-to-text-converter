akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "ERROR"
  stdout-loglevel = "ERROR"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
}

op-rabbit {
  topic-exchange-name = "amq.topic"
  channel-dispatcher = "op-rabbit.default-channel-dispatcher"
  default-channel-dispatcher {
    type = Dispatcher
    executor = "fork-join-executor"
    fork-join-executor {
      parallelism-min = 2
      parallelism-factor = 2.0
      parallelism-max = 4
    }
    throughput = 1
  }
  connection {
    virtual-host = "/"
    virtual-host = ${?RABBITMQ_VHOST}
    hosts = [13.0.1.184]
//  hosts = [${?RABBITMQ_HOST}]
    username = baydr.earles
//    username = {RABBITMQ_USERNAME}
//    password = ${RABBITMQ_PASSWORD}
    password = "Snakemgs4!"
    port = 5672
    port = ${?RABBITMQ_PORT}
    ssl = false
    connection-timeout = 3s
  }
}

mongo {
  database = mdc
//  database = ${MONGO_DATABASE}
  collection = poseidonDocumentLibrary
//  collection = ${MONGO_COLLECTION}
  connection {
    hosts = [13.0.1.170] # [${MONGO_HOST}]
//    username = ${MONGO_USERNAME}
//    password = ${MONGO_PASSWORD}
    username = "baydr.earles"
    password = "MMDo3}~84P_Oq"
    port = 27017
    port = ${?MONGO_PORT}
    database = "admin"
    database = "admin" # ${?MONGO_AUTH_DB}
  }
}

consumer {
  concurrent: 1
  concurrent: ${?CONSUMER_CONCURRENT}
  queue: baydr.poseidon.document.library.text_csv
  queue: ${?CONSUMER_QUEUE}

}

error {
  queue: "klein.error"
}

output {
  baseDirectory: "/efs/dev/extracted"
}