akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "ERROR"
  stdout-loglevel = "ERROR"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
}

mongo {
  doclib-database = "spreadsheet-test"
  documents-collection = "documents"
  derivative-collection = "documents_derivatives"
  connection {
    host = "localhost"
    host = ${?MONGO_HOST}
    username = "doclib"
    username = ${?MONGO_USERNAME}
    password = "doclib"
    password = ${?MONGO_PASSWORD}
    port = 27017
    port = ${?MONGO_PORT}
    database = "admin"
    database = ${?MONGO_AUTHSOURCE}
    srv = false
    srv = ${?MONGO_SRV}
  }
  read-limit = 100
  read-limit = ${?MONGO_READ_LIMIT}
  write-limit = 50
  write-limit = ${?MONGO_WRITE_LIMIT}
}

consumer {
  name: "spreadsheet-converter"
  name: ${?DOCLIB_SPREADSHEET_CONVERTER_NAME}
  name: ${?CONSUMER_NAME}
  concurrency: 1
  concurrency: ${?CONSUMER_CONCURRENCY}
  queue: "tabular.totsv"
  queue: ${?DOCLIB_SPREADSHEET_CONVERTER_NAME}
  queue: ${?CONSUMER_QUEUE}
  exchange: "doclib"
}

appName = ${?consumer.name}

doclib {
  flag: "test"
  root: "test-assets"
  supervisor {
    queue: "supervisor"
    queue: ${?DOCLIB_SUPERVISOR_QUEUE}
  }
  prefetch {
    queue: "prefetch"
    queue: ${?DOCLIB_PREFETCH_QUEUE}
  }
  archive {
    queue: "archive"
    queue: ${?DOCLIB_ARCHIVE_QUEUE}
  }
  error {
    queue: "errors"
    queue: ${?DOCLIB_ERROR_QUEUE}
  }
  local {
    target-dir: "local"
    target-dir: ${?DOCLIB_LOCAL_TARGET}
    temp-dir: "ingress"
    temp-dir: ${?DOCLIB_LOCAL_TEMP}
  }
  archive {
    target-dir: "archive"
    target-dir: ${?DOCLIB_ARCHIVE_TARGET}
  }
  remote {
    target-dir: "remote"
    target-dir: ${?DOCLIB_REMOTE_TARGET}
    temp-dir: "remote-ingress"
    temp-dir: ${?DOCLIB_REMOTE_TEMP}
  }
  derivative {
    target-dir: "derivatives"
  }
}

convert {
  format: "tsv"
}
